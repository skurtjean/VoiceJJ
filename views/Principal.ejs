<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>VoiceJJ - Um app simples de voz</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="/css/main.css">
    <script src="https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="//www.WebRTC-Experiment.com/RecordRTC.js"></script><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.0/css/all.css"
    integrity="sha384-Mmxa0mLqhmOeaE8vgOSbKacftZcsNYDjQzuCOm6D02luYSzBG8vpaOykv9lFQ51Y" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
    <script src="/vuejs/main.js"></script>
</head>
<body>
    <h1> Você está logado como <%= users[sessao].user %></h1>
    <h2> Selecione um usuário na lista pra conversar </h2>
    <div id="online-users">
      <ol id="selectable">

      </ol>  
    </div>
    <component-chat-texto id="<%= users[sessao]._id %>" to="<%= users[sessao]._id %>" ></component-chat-texto>

<script>
  var onlineUsers;
  $("input").val("");
  var socket = io('localhost:9001');
  socket.emit('join', {_id : '<%= users[sessao]._id %>'});

  function getAudio(successCallback, errorCallback) {
    navigator.getUserMedia({
      audio: true,
      video: false
    }, successCallback, errorCallback);
  }

  function onReceiveCall(call) {

    console.log('Você está sendo chamado ...');
    console.log(call);
    var aceitou = confirm("Você está sendo chamado por " + call.peer + ", gostaria de aceitar a chamada?")
    if (aceitou) {
      getAudio(
        function (MediaStream) {
          call.answer(MediaStream);
          console.log('Respondendo chamada...');
          $("#andamento").text("Respondendo chamada... <i class='fas fa-circle-notch fa-spin'></i>")
        },
        function (err) {
          console.log('Um erro ocorreu ao recuperar seu aúdio');
          $("#andamento").text("Erro inesperado, atualize a página.")
          console.log(err);
        }
      );
    } else {
      call.close();
    }
    call.on('stream', onReceiveStream);
  }

  function onReceiveStream(stream) {
    socket.emit('connection');
    var audio = document.querySelector('audio');
    audio.srcObject = stream;
    audio.onloadedmetadata = function (e) {
      console.log('tocando o audio');
      $("#andamento").text("Em chamada com " + $("#to").val());
      $("#call-controls").css("visibility", "visible");
      $("#pos-nick").css("visibility", "hidden");
      $("#end-call").css("visibility", "visible");
      audio.play();
      $("#container-chat").removeAttr("hidden");
      //$('#container-chat').text('<component-chat-texto :id="'+ from +'" :to="'+ $("#to").val() +'"></component-chat-texto>');
    }
  }
  var peer = new Peer(
     '<%= sessao %>', {
      host: 'localhost',
      port: 9000,
      path: '/peerjs',
      config: {
        'iceServers': [{
            urls: 'stun:stun.l.google.com:19302'
          },
          {
            urls: 'stun:stunserver.org'
          },
          {
            urls: 'turn:numb.viagenie.ca',
            credential: 'muazkh',
            username: 'webrtc@live.com'
          },
          {
            urls: 'turn:192.158.29.39:3478?transport=udp',
            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',
            username: '28224511:1379330808'
          },
          {
            urls: 'turn:192.158.29.39:3478?transport=tcp',
            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',
            username: '28224511:1379330808'
          }
        ]
      }
    }
  );

  //rgba(0,90,255,0.321)


  peer.on('open', function (id) {
    console.log('Meu ID do peer é: ' + id);
    $("#texto").html("<font size='72px'>Você está conectado como " + id + "</font>")
    $("#pos-nick").css("visibility", "visible")
  });
  peer.on('call', onReceiveCall);
  $("#mutecall").click(() => {

  })
  $("#silentcall").click(() => {

    var audioplayer = document.querySelectorAll("audio");
    if (audioplayer.volume === 0.0) {
      audioplayer.volume = 1.0;
      $("#silentcall").html("<i class='fas fa-volume'></i>");
    } else {
      audioplayer.volume = 0.0;
      $("#silentcall").html("<i class='fas fa-volume'></i>");

    }
  })
  $('#start-call').click(function () {
    console.log('Começando chamada...');
    $("#andamento").html("Chamando... <i class='fas fa-circle-notch fa-spin'></i>")

    getAudio(
      function (MediaStream) {
        $('#to').attr('type', 'hidden');
        $('#start-call').attr('disabled', 'disabled');
        console.log('Ligando para ' + to);
        $("#andamento").html('Ligando para ' + to + " <i class='fas fa-circle-notch fa-spin'></i>");
        var call = peer.call(to, MediaStream);
        call.on('stream', onReceiveStream);
      },
      function (err) {
        console.log('Um erro ocorreu ao pegar o seu aúdio');
        $('#start-call').attr('enabled', 'enabled');
        console.log(err);
      }
    );

  });
  socket.on('receiveMessage', (data) => receiveMessage);

  function receiveMessage(data){
    var message = '';
    message += '<div><div class="text">';
    message += '<span class="name"></span>';
    message += data;
    message += '</div></div>';
    $('#messages').append(message);
  }

  $('#message').keypress(function(e){
    var code = e.which; // recommended to use e.which, it's normalized across browsers
    if(code==13)e.preventDefault();
    if(code==32||code==13||code==188||code==186){
      socket.emit('sendMessage', {message: $('#message').val(), to: to});
      var message = '';
      message += '<div><div class="text">';
      message += '<span class="name">'+ from +'</span>';
      message += $('#message').val();;
      message += '</div></div>';
      $('#message').val('');
      $('#messages').append(message);
    }
  });
  function sendMessage(){
    socket.emit('sendMessage', {message: $('#message').val(), to: to});
    var message = '';
    message += '<div><div class="text">';
    message += '<span class="name">'+ from +'</span>';
    message += $('#message').val();;
    message += '</div></div>';
    $('#message').val('');
    $('#messages').append(message);
  }
  
  socket.on('onlineUsers', function(data) {
    $('#selectable').html('');
    console.log(data);
    for (var key in data.usersid) {
      $('#selectable').append("<li class='ui-widget-content' data-value='"+ data.usersid[key] +"'> " + data.usersuser[key] + "</li>")
    }
  });
  //socket.on('istyping', someoneIsTyping(data));
  //socket.on('notyping', finishIsTyping(data));
  //socket.on('finishing', finishingChat(data));
</script>
</body>

</html>